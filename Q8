//Write a Java program to determine whether two given strings are anagrams. An
anagram is a word or phrase formed by rearranging the letters of another word or
phrase.
Declare two strings, str1 and str2, and initialize them with values. Create a
HashMap<Character, Integer> to store the character frequencies of one string. Use
the methods containsKey(), put(), and get() to compare both strings and verify if they
are anagrams.


import java.util.Scanner;

public class Q8 {
    public static void main(String[] args) {
        
        String str1 = "listen";
        String str2 = "silent";

       
        if (str1.length() != str2.length()) {
            System.out.println("The strings are not anagrams.");
            return;
        }

        
        HashMap<Character, Integer> map = new HashMap<>();

        // Store the frequency of each character in str1
        for (char c : str1.toCharArray()) {
            map.put(c, map.getOrDefault(c, 0) + 1);
        }

        // Compare str2 with the HashMap
        for (char c : str2.toCharArray()) {
            // If the character is not in the map or its count is zero, they are not anagrams
            if (!map.containsKey(c) || map.get(c) == 0) {
                System.out.println("The strings are not anagrams.");
                return;
            }
            // Decrease the frequency of the character in the map
            map.put(c, map.get(c) - 1);
        }

        // If we reach here, the strings are anagrams
        System.out.println("The strings are anagrams.");
    }
}
